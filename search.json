[
  {
    "objectID": "survival-theory.html",
    "href": "survival-theory.html",
    "title": "Survival Analysis: Theory and Applications",
    "section": "",
    "text": "Survival analysis is a branch of statistics that deals with the analysis of time-to-event data. In clinical trials, the event usually refers to a specific outcome such as death, disease recurrence, recovery, or relapse. The goal is to analyze the time it takes for the event to occur, while accounting for the fact that not all participants may experience the event during the study period (censoring).\n…\n🧬 Survival analysis is a fundamental tool to understand and compare the prognosis of patients under different treatments, essential for evidence-based medicine."
  },
  {
    "objectID": "survival-theory.html#what-is-survival-analysis",
    "href": "survival-theory.html#what-is-survival-analysis",
    "title": "Survival Analysis: Theory and Applications",
    "section": "",
    "text": "Survival analysis is a branch of statistics that deals with the analysis of time-to-event data. In clinical trials, the event usually refers to a specific outcome such as death, disease recurrence, recovery, or relapse. The goal is to analyze the time it takes for the event to occur, while accounting for the fact that not all participants may experience the event during the study period (censoring).\n…\n🧬 Survival analysis is a fundamental tool to understand and compare the prognosis of patients under different treatments, essential for evidence-based medicine."
  },
  {
    "objectID": "project_template.html",
    "href": "project_template.html",
    "title": "{{title}}",
    "section": "",
    "text": "This project compares the implementation of {{analysis_type}} using SAS and R."
  },
  {
    "objectID": "project_template.html#objective",
    "href": "project_template.html#objective",
    "title": "{{title}}",
    "section": "",
    "text": "This project compares the implementation of {{analysis_type}} using SAS and R."
  },
  {
    "objectID": "projects/survival-analysis-sas-vs-r.html",
    "href": "projects/survival-analysis-sas-vs-r.html",
    "title": "Survival Analysis - SAS vs R",
    "section": "",
    "text": "This project compares the Kaplan-Meier survival analysis using SAS and R."
  },
  {
    "objectID": "projects/survival-analysis-sas-vs-r.html#objective",
    "href": "projects/survival-analysis-sas-vs-r.html#objective",
    "title": "Survival Analysis - SAS vs R",
    "section": "",
    "text": "This project compares the Kaplan-Meier survival analysis using SAS and R."
  },
  {
    "objectID": "projects/r-survival-analysis.html",
    "href": "projects/r-survival-analysis.html",
    "title": "Survival Analysis in R",
    "section": "",
    "text": "This project demonstrates Kaplan-Meier estimation using survival and ggplot2 in R.\n\n\nlibrary(survival)\nlibrary(ggplot2)\n\nkm_fit &lt;- survfit(Surv(AVAL, CNSR) ~ TRTP, data = adtte)\nggsurvplot(km_fit)\n\n\n\nSurvival analysis is a key analysis in oncology trials, especially for endpoint analysis like Progression-Free Survival (PFS) and Overall Survival (OS)."
  },
  {
    "objectID": "projects/r-survival-analysis.html#example-code",
    "href": "projects/r-survival-analysis.html#example-code",
    "title": "Survival Analysis in R",
    "section": "",
    "text": "library(survival)\nlibrary(ggplot2)\n\nkm_fit &lt;- survfit(Surv(AVAL, CNSR) ~ TRTP, data = adtte)\nggsurvplot(km_fit)"
  },
  {
    "objectID": "projects/r-survival-analysis.html#explanation",
    "href": "projects/r-survival-analysis.html#explanation",
    "title": "Survival Analysis in R",
    "section": "",
    "text": "Survival analysis is a key analysis in oncology trials, especially for endpoint analysis like Progression-Free Survival (PFS) and Overall Survival (OS)."
  },
  {
    "objectID": "projects/demographic-table.html",
    "href": "projects/demographic-table.html",
    "title": "Demographic Table: SAS vs R",
    "section": "",
    "text": "This project demonstrates how to generate a demographic table in clinical trials using SAS (PROC REPORT) and R (gt package)."
  },
  {
    "objectID": "projects/demographic-table.html#objective",
    "href": "projects/demographic-table.html#objective",
    "title": "Demographic Table: SAS vs R",
    "section": "",
    "text": "This project demonstrates how to generate a demographic table in clinical trials using SAS (PROC REPORT) and R (gt package)."
  },
  {
    "objectID": "projects/bioinformatics_flow.html",
    "href": "projects/bioinformatics_flow.html",
    "title": "Bioinformatics Analysis Flow (Gene Expression & Survival)",
    "section": "",
    "text": "This section documents a full bioinformatics analysis pipeline combining gene expression data and clinical survival data.\n\n\nThis includes: - Gene expression data (GSE7390_expression.csv) - Clinical metadata (GSE7390_metadata.csv)\n\n\n\n\nQuality Control (removal of low-expression genes)\nNormalization (log2 transformation or z-score)\n\n\n\n\n\nPrincipal Component Analysis (PCA)\nClustering (heatmap or unsupervised clustering)\n\n\n\n\n\nCompare gene expression between survivors and non-survivors\nIdentify significantly differentially expressed genes (DEGs)\n\n\n\n\n\nMultivariate Cox model incorporating both clinical covariates and DEGs\n\n\n\n\nTFLs produced: - Table: Top 10 survival-associated genes - Listing: Patient list with molecular and clinical features - Figure: Heatmap of expression by clinical group\n\n\n\nAll the above will be combined into this page and made available in the portfolio.\n\n\n\nBioinformatics Flowchart"
  },
  {
    "objectID": "projects/bioinformatics_flow.html#step-1-raw-data",
    "href": "projects/bioinformatics_flow.html#step-1-raw-data",
    "title": "Bioinformatics Analysis Flow (Gene Expression & Survival)",
    "section": "",
    "text": "This includes: - Gene expression data (GSE7390_expression.csv) - Clinical metadata (GSE7390_metadata.csv)"
  },
  {
    "objectID": "projects/bioinformatics_flow.html#step-2-preprocessing",
    "href": "projects/bioinformatics_flow.html#step-2-preprocessing",
    "title": "Bioinformatics Analysis Flow (Gene Expression & Survival)",
    "section": "",
    "text": "Quality Control (removal of low-expression genes)\nNormalization (log2 transformation or z-score)"
  },
  {
    "objectID": "projects/bioinformatics_flow.html#step-3-exploratory-analysis",
    "href": "projects/bioinformatics_flow.html#step-3-exploratory-analysis",
    "title": "Bioinformatics Analysis Flow (Gene Expression & Survival)",
    "section": "",
    "text": "Principal Component Analysis (PCA)\nClustering (heatmap or unsupervised clustering)"
  },
  {
    "objectID": "projects/bioinformatics_flow.html#step-4-differential-expression-analysis",
    "href": "projects/bioinformatics_flow.html#step-4-differential-expression-analysis",
    "title": "Bioinformatics Analysis Flow (Gene Expression & Survival)",
    "section": "",
    "text": "Compare gene expression between survivors and non-survivors\nIdentify significantly differentially expressed genes (DEGs)"
  },
  {
    "objectID": "projects/bioinformatics_flow.html#step-5-combined-modeling",
    "href": "projects/bioinformatics_flow.html#step-5-combined-modeling",
    "title": "Bioinformatics Analysis Flow (Gene Expression & Survival)",
    "section": "",
    "text": "Multivariate Cox model incorporating both clinical covariates and DEGs"
  },
  {
    "objectID": "projects/bioinformatics_flow.html#step-6-tfl-generation",
    "href": "projects/bioinformatics_flow.html#step-6-tfl-generation",
    "title": "Bioinformatics Analysis Flow (Gene Expression & Survival)",
    "section": "",
    "text": "TFLs produced: - Table: Top 10 survival-associated genes - Listing: Patient list with molecular and clinical features - Figure: Heatmap of expression by clinical group"
  },
  {
    "objectID": "projects/bioinformatics_flow.html#step-7-final-report",
    "href": "projects/bioinformatics_flow.html#step-7-final-report",
    "title": "Bioinformatics Analysis Flow (Gene Expression & Survival)",
    "section": "",
    "text": "All the above will be combined into this page and made available in the portfolio.\n\n\n\nBioinformatics Flowchart"
  },
  {
    "objectID": "clinical-programming-portfolio-full/projects/sas-oncology-report.html",
    "href": "clinical-programming-portfolio-full/projects/sas-oncology-report.html",
    "title": "Oncology Report in SAS",
    "section": "",
    "text": "This project demonstrates how to create a demographic table in SAS using PROC REPORT.\n\n\nPROC REPORT DATA=adsl NOWD;\n    COLUMN age sex race;\nRUN;\n\n\n\nIn clinical trials, demographic tables are a common deliverable. This example highlights a basic report that could be part of a larger Clinical Study Report (CSR)."
  },
  {
    "objectID": "clinical-programming-portfolio-full/projects/sas-oncology-report.html#example-code",
    "href": "clinical-programming-portfolio-full/projects/sas-oncology-report.html#example-code",
    "title": "Oncology Report in SAS",
    "section": "",
    "text": "PROC REPORT DATA=adsl NOWD;\n    COLUMN age sex race;\nRUN;"
  },
  {
    "objectID": "clinical-programming-portfolio-full/projects/sas-oncology-report.html#explanation",
    "href": "clinical-programming-portfolio-full/projects/sas-oncology-report.html#explanation",
    "title": "Oncology Report in SAS",
    "section": "",
    "text": "In clinical trials, demographic tables are a common deliverable. This example highlights a basic report that could be part of a larger Clinical Study Report (CSR)."
  },
  {
    "objectID": "clinical-programming-portfolio-full/projects/index.html",
    "href": "clinical-programming-portfolio-full/projects/index.html",
    "title": "Projects",
    "section": "",
    "text": "Clinical Programming Projects\nWelcome to my projects section. Below are some real examples demonstrating both SAS and R techniques applied to oncology clinical trials.\n\nOncology Report in SAS\nSurvival Analysis in R"
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Blog",
    "section": "",
    "text": "Blog\nWelcome to my clinical programming blog."
  },
  {
    "objectID": "agile.html",
    "href": "agile.html",
    "title": "Agile Methodologies",
    "section": "",
    "text": "Agile in Clinical Programming\nAs the clinical programming industry evolves, the need for agility grows stronger. Traditional waterfall models are being replaced with Scrum-inspired approaches, where cross-functional teams collaborate continuously.\n\nSprint-based programming (TFL production in cycles).\nEarly validation and continuous feedback.\nCollaboration between data management, programming, and biostatistics.\n\nThis section will grow as I continue exploring and applying Agile methodologies in clinical programming."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "About Me\nMy journey started in Electronic Engineering, but I soon realized I wanted to work closer to the healthcare field. That’s how I transitioned into Biomedical Engineering, combining technology with a passion for health.\nFrom the beginning, my work always revolved around data analysis — first in hardware (processor data), then in business intelligence, and finally in clinical trials. This constant evolution helped me develop both technical programming skills and a strong sense of how data can tell the story of a product’s development.\nWhat truly inspires me is seeing how clinical trial data reflects the real-world impact a treatment can have — from initial data cleaning and reporting, to seeing that product eventually reach the market and help thousands of people.\n\nEvery dataset is a story of lives transformed — and I’m proud to help write those stories."
  },
  {
    "objectID": "blog/2025-03-02-sas-to-r-migration.html",
    "href": "blog/2025-03-02-sas-to-r-migration.html",
    "title": "Migrating from SAS to R in Clinical Programming",
    "section": "",
    "text": "/* Original SAS code */\nPROC REPORT DATA=adsl;\n    COLUMN age sex race;\nRUN;\n# Equivalent in R (gt table)\nlibrary(gt)\nadsl |&gt; gt()\n\n\n\n/* Original SAS code */\nPROC LIFETEST DATA=adtte PLOTS=survival;\n    TIME aval*cnsr(1);\n    STRATA trtp;\nRUN;\n# Equivalent in R (survfit + ggplot2)\nlibrary(survival)\nlibrary(ggplot2)\n\nkm_fit &lt;- survfit(Surv(AVAL, CNSR) ~ TRTP, data = adtte)\n\n# Plot Kaplan-Meier Curve\nggsurvplot(km_fit)\nThese are just a couple of examples showing how the thinking process can stay the same, even if the syntax changes."
  },
  {
    "objectID": "blog/2025-03-02-sas-to-r-migration.html#example-1-proc-report-to-gt-table",
    "href": "blog/2025-03-02-sas-to-r-migration.html#example-1-proc-report-to-gt-table",
    "title": "Migrating from SAS to R in Clinical Programming",
    "section": "",
    "text": "/* Original SAS code */\nPROC REPORT DATA=adsl;\n    COLUMN age sex race;\nRUN;\n# Equivalent in R (gt table)\nlibrary(gt)\nadsl |&gt; gt()"
  },
  {
    "objectID": "blog/2025-03-02-sas-to-r-migration.html#example-2-proc-lifetest-to-survfit-kaplan-meier",
    "href": "blog/2025-03-02-sas-to-r-migration.html#example-2-proc-lifetest-to-survfit-kaplan-meier",
    "title": "Migrating from SAS to R in Clinical Programming",
    "section": "",
    "text": "/* Original SAS code */\nPROC LIFETEST DATA=adtte PLOTS=survival;\n    TIME aval*cnsr(1);\n    STRATA trtp;\nRUN;\n# Equivalent in R (survfit + ggplot2)\nlibrary(survival)\nlibrary(ggplot2)\n\nkm_fit &lt;- survfit(Surv(AVAL, CNSR) ~ TRTP, data = adtte)\n\n# Plot Kaplan-Meier Curve\nggsurvplot(km_fit)\nThese are just a couple of examples showing how the thinking process can stay the same, even if the syntax changes."
  },
  {
    "objectID": "clinical-programming-portfolio-full/projects/r-survival-analysis.html",
    "href": "clinical-programming-portfolio-full/projects/r-survival-analysis.html",
    "title": "Survival Analysis in R",
    "section": "",
    "text": "This project demonstrates Kaplan-Meier estimation using survival and ggplot2 in R.\n\n\nlibrary(survival)\nlibrary(ggplot2)\n\nkm_fit &lt;- survfit(Surv(AVAL, CNSR) ~ TRTP, data = adtte)\nggsurvplot(km_fit)\n\n\n\nSurvival analysis is a key analysis in oncology trials, especially for endpoint analysis like Progression-Free Survival (PFS) and Overall Survival (OS)."
  },
  {
    "objectID": "clinical-programming-portfolio-full/projects/r-survival-analysis.html#example-code",
    "href": "clinical-programming-portfolio-full/projects/r-survival-analysis.html#example-code",
    "title": "Survival Analysis in R",
    "section": "",
    "text": "library(survival)\nlibrary(ggplot2)\n\nkm_fit &lt;- survfit(Surv(AVAL, CNSR) ~ TRTP, data = adtte)\nggsurvplot(km_fit)"
  },
  {
    "objectID": "clinical-programming-portfolio-full/projects/r-survival-analysis.html#explanation",
    "href": "clinical-programming-portfolio-full/projects/r-survival-analysis.html#explanation",
    "title": "Survival Analysis in R",
    "section": "",
    "text": "Survival analysis is a key analysis in oncology trials, especially for endpoint analysis like Progression-Free Survival (PFS) and Overall Survival (OS)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Clinical Programming Portfolio",
    "section": "",
    "text": "Welcome to my Clinical Programming Portfolio!"
  },
  {
    "objectID": "projects/clinical_flow.html",
    "href": "projects/clinical_flow.html",
    "title": "Clinical Trial Analysis Flow (CDISC)",
    "section": "",
    "text": "This section documents the full process of a regulatory-compliant clinical trial analysis, following CDISC standards.\n\n\nThis includes: - Demographics (age, sex, treatment group) - Clinical Events (relapse, recurrence, etc.) - Disposition (dropout, completion) - Time-to-event (TTE) data\n\n\n\nSDTM datasets produced: - DM - Demographics - CE - Clinical Events - DS - Disposition\n\n\n\nADaM datasets produced: - ADTTE - Time to Event dataset (ready for survival analysis)\n\n\n\nTFLs produced: - Table: Population summary table (age, sex, etc.) - Listing: List of key events per patient - Figure: Kaplan-Meier survival plot\n\n\n\nAll the above will be combined into this page and made available in the portfolio.\n\n\n\nClinical Flowchart"
  },
  {
    "objectID": "projects/clinical_flow.html#step-1-raw-data",
    "href": "projects/clinical_flow.html#step-1-raw-data",
    "title": "Clinical Trial Analysis Flow (CDISC)",
    "section": "",
    "text": "This includes: - Demographics (age, sex, treatment group) - Clinical Events (relapse, recurrence, etc.) - Disposition (dropout, completion) - Time-to-event (TTE) data"
  },
  {
    "objectID": "projects/clinical_flow.html#step-2-create-sdtm",
    "href": "projects/clinical_flow.html#step-2-create-sdtm",
    "title": "Clinical Trial Analysis Flow (CDISC)",
    "section": "",
    "text": "SDTM datasets produced: - DM - Demographics - CE - Clinical Events - DS - Disposition"
  },
  {
    "objectID": "projects/clinical_flow.html#step-3-create-adam",
    "href": "projects/clinical_flow.html#step-3-create-adam",
    "title": "Clinical Trial Analysis Flow (CDISC)",
    "section": "",
    "text": "ADaM datasets produced: - ADTTE - Time to Event dataset (ready for survival analysis)"
  },
  {
    "objectID": "projects/clinical_flow.html#step-4-tfl-generation",
    "href": "projects/clinical_flow.html#step-4-tfl-generation",
    "title": "Clinical Trial Analysis Flow (CDISC)",
    "section": "",
    "text": "TFLs produced: - Table: Population summary table (age, sex, etc.) - Listing: List of key events per patient - Figure: Kaplan-Meier survival plot"
  },
  {
    "objectID": "projects/clinical_flow.html#step-5-final-report",
    "href": "projects/clinical_flow.html#step-5-final-report",
    "title": "Clinical Trial Analysis Flow (CDISC)",
    "section": "",
    "text": "All the above will be combined into this page and made available in the portfolio.\n\n\n\nClinical Flowchart"
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects",
    "section": "",
    "text": "Clinical Programming Projects\nWelcome to my projects section. Below are some real examples demonstrating both SAS and R techniques applied to oncology clinical trials.\n\nOncology Report in SAS\nSurvival Analysis in R"
  },
  {
    "objectID": "projects/sas-oncology-report.html",
    "href": "projects/sas-oncology-report.html",
    "title": "Oncology Report in SAS",
    "section": "",
    "text": "This project demonstrates how to create a demographic table in SAS using PROC REPORT.\n\n\nPROC REPORT DATA=adsl NOWD;\n    COLUMN age sex race;\nRUN;\n\n\n\nIn clinical trials, demographic tables are a common deliverable. This example highlights a basic report that could be part of a larger Clinical Study Report (CSR)."
  },
  {
    "objectID": "projects/sas-oncology-report.html#example-code",
    "href": "projects/sas-oncology-report.html#example-code",
    "title": "Oncology Report in SAS",
    "section": "",
    "text": "PROC REPORT DATA=adsl NOWD;\n    COLUMN age sex race;\nRUN;"
  },
  {
    "objectID": "projects/sas-oncology-report.html#explanation",
    "href": "projects/sas-oncology-report.html#explanation",
    "title": "Oncology Report in SAS",
    "section": "",
    "text": "In clinical trials, demographic tables are a common deliverable. This example highlights a basic report that could be part of a larger Clinical Study Report (CSR)."
  },
  {
    "objectID": "projects/survival_analysis/survival_analysis_parallel.html",
    "href": "projects/survival_analysis/survival_analysis_parallel.html",
    "title": "Survival Analysis - SAS vs R",
    "section": "",
    "text": "This section demonstrates a parallel analysis comparing the creation of a Kaplan-Meier survival curve using both SAS and R. We are using the dataset derived from GSE7390, simulating an ADTTE structure (Time to Event Analysis dataset).\n\n\n\nThe dataset used for this analysis is: - GSE7390_metadata.csv (with columns: SampleID, Treatment, Age, TimeToEvent, Event)\n\n\n\n\n\n\n* Import the CSV into a SAS dataset;\nproc import datafile=\"GSE7390_metadata.csv\"\n    out=work.adtte\n    dbms=csv\n    replace;\n    getnames=yes;\nrun;\n\n\n\n# Load data into R\nadtte &lt;- read.csv(\"GSE7390_metadata.csv\")\n\n\n\n\n\n\n\nproc lifetest data=adtte plots=survival;\n    time TimeToEvent*Event(0);\n    strata Treatment;\nrun;\n\n\n\nlibrary(survival)\nlibrary(survminer)\n\nfit &lt;- survfit(Surv(TimeToEvent, Event) ~ Treatment, data = adtte)\n\nggsurvplot(fit, data = adtte, pval = TRUE, risk.table = TRUE, ggtheme = theme_minimal())\nggsave(\"survival_analysis_output_R.png\", dpi = 300)\n\n\n\n\n\n\n\n(This image should be manually generated in SAS and saved to the projects/survival_analysis/ folder as survival_analysis_output_SAS.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\nTreatment\nn\nEvents\nMedian Survival\n\n\n\n\nChemo\nXX\nXX\nXX months\n\n\nPlacebo\nXX\nXX\nXX months\n\n\n\n\n\n\n\nThis example highlights how to perform the same analysis in both environments, providing flexibility to transition from SAS to R while ensuring traceability."
  },
  {
    "objectID": "projects/survival_analysis/survival_analysis_parallel.html#dataset",
    "href": "projects/survival_analysis/survival_analysis_parallel.html#dataset",
    "title": "Survival Analysis - SAS vs R",
    "section": "",
    "text": "The dataset used for this analysis is: - GSE7390_metadata.csv (with columns: SampleID, Treatment, Age, TimeToEvent, Event)"
  },
  {
    "objectID": "projects/survival_analysis/survival_analysis_parallel.html#step-1-import-data",
    "href": "projects/survival_analysis/survival_analysis_parallel.html#step-1-import-data",
    "title": "Survival Analysis - SAS vs R",
    "section": "",
    "text": "* Import the CSV into a SAS dataset;\nproc import datafile=\"GSE7390_metadata.csv\"\n    out=work.adtte\n    dbms=csv\n    replace;\n    getnames=yes;\nrun;\n\n\n\n# Load data into R\nadtte &lt;- read.csv(\"GSE7390_metadata.csv\")"
  },
  {
    "objectID": "projects/survival_analysis/survival_analysis_parallel.html#step-2-survival-analysis",
    "href": "projects/survival_analysis/survival_analysis_parallel.html#step-2-survival-analysis",
    "title": "Survival Analysis - SAS vs R",
    "section": "",
    "text": "proc lifetest data=adtte plots=survival;\n    time TimeToEvent*Event(0);\n    strata Treatment;\nrun;\n\n\n\nlibrary(survival)\nlibrary(survminer)\n\nfit &lt;- survfit(Surv(TimeToEvent, Event) ~ Treatment, data = adtte)\n\nggsurvplot(fit, data = adtte, pval = TRUE, risk.table = TRUE, ggtheme = theme_minimal())\nggsave(\"survival_analysis_output_R.png\", dpi = 300)"
  },
  {
    "objectID": "projects/survival_analysis/survival_analysis_parallel.html#step-3-results-comparison",
    "href": "projects/survival_analysis/survival_analysis_parallel.html#step-3-results-comparison",
    "title": "Survival Analysis - SAS vs R",
    "section": "",
    "text": "(This image should be manually generated in SAS and saved to the projects/survival_analysis/ folder as survival_analysis_output_SAS.png)"
  },
  {
    "objectID": "projects/survival_analysis/survival_analysis_parallel.html#summary-table-optional",
    "href": "projects/survival_analysis/survival_analysis_parallel.html#summary-table-optional",
    "title": "Survival Analysis - SAS vs R",
    "section": "",
    "text": "Treatment\nn\nEvents\nMedian Survival\n\n\n\n\nChemo\nXX\nXX\nXX months\n\n\nPlacebo\nXX\nXX\nXX months"
  },
  {
    "objectID": "projects/survival_analysis/survival_analysis_parallel.html#final-notes",
    "href": "projects/survival_analysis/survival_analysis_parallel.html#final-notes",
    "title": "Survival Analysis - SAS vs R",
    "section": "",
    "text": "This example highlights how to perform the same analysis in both environments, providing flexibility to transition from SAS to R while ensuring traceability."
  },
  {
    "objectID": "README_GITHUB_UPDATE.html",
    "href": "README_GITHUB_UPDATE.html",
    "title": "📦 How to Update CSS and Push to GitHub Pages",
    "section": "",
    "text": "This document explains how to update the style of the Clinical Programming Portfolio and ensure that changes are published on GitHub Pages.\n\n\n\n\nOpen styles.css file.\nAdd or modify the CSS code (e.g., fix dropdown menu colors).\nSave the file.\n\nExample of new CSS block to add for fixing dropdown menu colors:\n/* Fix dropdown menu background and text color */\n.navbar-nav .dropdown-menu {\n    background-color: #002147; /* Navy blue */\n    color: white;\n}\n\n.navbar-nav .dropdown-menu a {\n    color: white !important;\n}\n\n.navbar-nav .dropdown-menu a:hover {\n    background-color: #004080; /* Lighter blue on hover */\n    color: white !important;\n}\n\n\n\n\nRun this command to regenerate all site files (HTML):\nquarto render\n\n\n\n\nAdd the modified CSS file (and any other changes):\ngit add styles.css\nIf you made changes to other files (like .qmd), you can add them too:\ngit add .\n\n\n\n\nWrite a meaningful commit message:\ngit commit -m \"Fix dropdown menu colors and update styles\"\n\n\n\n\nSend your updates to the GitHub repository:\ngit push origin main\n\n\n\n\nVisit your website at:\nhttps://YOUR_USERNAME.github.io/YOUR_REPO/\nNote: Sometimes GitHub Pages may take 1-2 minutes to refresh the new changes.\n\n\n\n\n\nRemember to adjust quarto.yml if you add new sections or projects.\nYou can repeat this workflow for any update in content (QMD), style (CSS), or structure (YML).\n\n\n🧬 “Empowering clinical data science with style and clarity.”"
  },
  {
    "objectID": "README_GITHUB_UPDATE.html#step-1-edit-the-css",
    "href": "README_GITHUB_UPDATE.html#step-1-edit-the-css",
    "title": "📦 How to Update CSS and Push to GitHub Pages",
    "section": "",
    "text": "Open styles.css file.\nAdd or modify the CSS code (e.g., fix dropdown menu colors).\nSave the file.\n\nExample of new CSS block to add for fixing dropdown menu colors:\n/* Fix dropdown menu background and text color */\n.navbar-nav .dropdown-menu {\n    background-color: #002147; /* Navy blue */\n    color: white;\n}\n\n.navbar-nav .dropdown-menu a {\n    color: white !important;\n}\n\n.navbar-nav .dropdown-menu a:hover {\n    background-color: #004080; /* Lighter blue on hover */\n    color: white !important;\n}"
  },
  {
    "objectID": "README_GITHUB_UPDATE.html#step-2-render-the-portfolio-with-quarto",
    "href": "README_GITHUB_UPDATE.html#step-2-render-the-portfolio-with-quarto",
    "title": "📦 How to Update CSS and Push to GitHub Pages",
    "section": "",
    "text": "Run this command to regenerate all site files (HTML):\nquarto render"
  },
  {
    "objectID": "README_GITHUB_UPDATE.html#step-3-stage-the-changes-git-add",
    "href": "README_GITHUB_UPDATE.html#step-3-stage-the-changes-git-add",
    "title": "📦 How to Update CSS and Push to GitHub Pages",
    "section": "",
    "text": "Add the modified CSS file (and any other changes):\ngit add styles.css\nIf you made changes to other files (like .qmd), you can add them too:\ngit add ."
  },
  {
    "objectID": "README_GITHUB_UPDATE.html#step-4-commit-the-changes",
    "href": "README_GITHUB_UPDATE.html#step-4-commit-the-changes",
    "title": "📦 How to Update CSS and Push to GitHub Pages",
    "section": "",
    "text": "Write a meaningful commit message:\ngit commit -m \"Fix dropdown menu colors and update styles\""
  },
  {
    "objectID": "README_GITHUB_UPDATE.html#step-5-push-the-changes-to-github",
    "href": "README_GITHUB_UPDATE.html#step-5-push-the-changes-to-github",
    "title": "📦 How to Update CSS and Push to GitHub Pages",
    "section": "",
    "text": "Send your updates to the GitHub repository:\ngit push origin main"
  },
  {
    "objectID": "README_GITHUB_UPDATE.html#step-6-check-github-pages",
    "href": "README_GITHUB_UPDATE.html#step-6-check-github-pages",
    "title": "📦 How to Update CSS and Push to GitHub Pages",
    "section": "",
    "text": "Visit your website at:\nhttps://YOUR_USERNAME.github.io/YOUR_REPO/\nNote: Sometimes GitHub Pages may take 1-2 minutes to refresh the new changes."
  },
  {
    "objectID": "README_GITHUB_UPDATE.html#final-notes",
    "href": "README_GITHUB_UPDATE.html#final-notes",
    "title": "📦 How to Update CSS and Push to GitHub Pages",
    "section": "",
    "text": "Remember to adjust quarto.yml if you add new sections or projects.\nYou can repeat this workflow for any update in content (QMD), style (CSS), or structure (YML).\n\n\n🧬 “Empowering clinical data science with style and clarity.”"
  }
]